Game.UnsubscribeAllEvents()
GUI.CloseAllWindows()

Game.OnGameStart("AssetsTest", func()
{
	print("[CHEAT ENGINE] Game Started...")	
	x = Game.SubscribeEvent("EventOnMatchStateUpdated", func(x)
	{
		print("[CHEAT ENGINE] Match State:" + x.State)	
		if(x.State == enumValue("Quantum.MatchState", "Created"))
		{
			rc = Game.Frame.RuntimeConfig

			'Edicao de asset nornmal'
			'md = Game.Frame.BeginEditAsset("MovementData", rc.MovementData.Id)
			md.MovementSpeed = Quantum.ToFP(10)
			rc.MovementData = Game.Frame.FinishEditAsset(md)'

			'Edição de asset na interface'
			'object , field_name, asset_type, asset_field_to_show'
			f = GUI.AssetField(rc, "MovementData", "MovementData", "MovementSpeed")
			w = GUI.Window("Test", f, true)

		}
	})
})

print("[CHEAT ENGINE] Wating for match...")
